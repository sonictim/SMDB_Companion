[package]
name = "SMDB_Companion"
version = "0.4.1"
authors = ["Tim Farrell <soundguru@gmail.com>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.76"
#build = "build.rs"

[package.metadata]
macos_deployment_target = "12.0"

[package.metadata.docs.rs]
all-features = true
#targets = ["x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "aarch64-apple-darwin", "wasm32-unknown-unknown"]
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[package.metadata.bundle]
identifier = "com.SMDB_Companion"
icon = ["assets/icon.icns"]

[package.metadata.bundle.bin.SMDB_Companion]
identifier = "com.SMDB_Companion"
icon = ["assets/icon.icns"]


#[lib]
#crate-type = ["cdylib"]

[build]
rustflags = ["-C", "target-feature=+crt-static"]

[dependencies]
egui = "0.30.0"
eframe = { version = "0.30.0", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4.25"
rfd = "0.15.2"

# You only need serde if you want app persistence:
serde = { version = "1.0.217", features = ["derive"] }

regex = "1.11.1"
sqlx = { version = "0.8.3", features = ["sqlite", "runtime-tokio-native-tls"] }
tokio = { version = "1.43.0", features = ["full"] }
once_cell = "1.20.2"
rayon = "1.10.0"
futures = "0.3.31"
atomic = "0.6.0"
sha2 = "0.10.8"
hex = "0.4.3"
trash = "5.2.1"
clipboard = "0.5.0"
dirs = "6.0.0"
webbrowser = "1.0.3"
reqwest = "0.12.12"
claxon = "0.4.3"
hound = "3.5.1"
anyhow = "1.0.95"
minimp3 = "0.5.1"
chrono = "0.4.39"
semver = "1.0.24"
egui_glow = "0.30.0"
glow = "0.16.0"
raw-window-handle = "0.6.2"
egui-multiwin = "0.5.2"



# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11.6"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4.50"

# to access the DOM (to hide the loading text)
[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.77"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }



