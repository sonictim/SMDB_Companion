{
  "version": 3,
  "sources": ["../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/base.js", "../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/menuItem.js", "../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/checkMenuItem.js", "../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/iconMenuItem.js", "../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/predefinedMenuItem.js", "../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/submenu.js", "../../.pnpm/@tauri-apps+api@2.5.0/node_modules/@tauri-apps/api/menu/menu.js"],
  "sourcesContent": ["import { __classPrivateFieldGet, __classPrivateFieldSet } from '../external/tslib/tslib.es6.js';\nimport { Resource, Channel, invoke } from '../core.js';\nimport { transformImage } from '../image.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\nvar _MenuItemBase_id, _MenuItemBase_kind;\nfunction injectChannel(i) {\n    var _a;\n    if ('items' in i) {\n        i.items = (_a = i.items) === null || _a === void 0 ? void 0 : _a.map((item) => 'rid' in item ? item : injectChannel(item));\n    }\n    else if ('action' in i && i.action) {\n        const handler = new Channel();\n        handler.onmessage = i.action;\n        delete i.action;\n        return { ...i, handler };\n    }\n    return i;\n}\nasync function newMenu(kind, opts) {\n    const handler = new Channel();\n    if (opts && typeof opts === 'object') {\n        if ('action' in opts && opts.action) {\n            handler.onmessage = opts.action;\n            delete opts.action;\n        }\n        // about predefined menu item icon\n        if ('item' in opts\n            && opts.item\n            && typeof opts.item === 'object'\n            && 'About' in opts.item\n            && opts.item.About\n            && typeof opts.item.About === 'object'\n            && 'icon' in opts.item.About\n            && opts.item.About.icon) {\n            opts.item.About.icon = transformImage(opts.item.About.icon);\n        }\n        // icon menu item icon\n        if ('icon' in opts && opts.icon) {\n            opts.icon = transformImage(opts.icon);\n        }\n        // submenu items\n        if ('items' in opts && opts.items) {\n            function prepareItem(i) {\n                var _a;\n                if ('rid' in i) {\n                    return [i.rid, i.kind];\n                }\n                if ('item' in i && typeof i.item === 'object' && ((_a = i.item.About) === null || _a === void 0 ? void 0 : _a.icon)) {\n                    i.item.About.icon = transformImage(i.item.About.icon);\n                }\n                if ('icon' in i && i.icon) {\n                    i.icon = transformImage(i.icon);\n                }\n                if ('items' in i && i.items) {\n                    // @ts-expect-error the `prepareItem` return doesn't exactly match\n                    // this is fine, because the difference is in `[number, string]` variant\n                    i.items = i.items.map(prepareItem);\n                }\n                return injectChannel(i);\n            }\n            // @ts-expect-error the `prepareItem` return doesn't exactly match\n            // this is fine, because the difference is in `[number, string]` variant\n            opts.items = opts.items.map(prepareItem);\n        }\n    }\n    return invoke('plugin:menu|new', {\n        kind,\n        options: opts,\n        handler\n    });\n}\nclass MenuItemBase extends Resource {\n    /** The id of this item. */\n    get id() {\n        return __classPrivateFieldGet(this, _MenuItemBase_id, \"f\");\n    }\n    /** @ignore */\n    get kind() {\n        return __classPrivateFieldGet(this, _MenuItemBase_kind, \"f\");\n    }\n    /** @ignore */\n    constructor(rid, id, kind) {\n        super(rid);\n        /** @ignore */\n        _MenuItemBase_id.set(this, void 0);\n        /** @ignore */\n        _MenuItemBase_kind.set(this, void 0);\n        __classPrivateFieldSet(this, _MenuItemBase_id, id, \"f\");\n        __classPrivateFieldSet(this, _MenuItemBase_kind, kind, \"f\");\n    }\n}\n_MenuItemBase_id = new WeakMap(), _MenuItemBase_kind = new WeakMap();\n\nexport { MenuItemBase, newMenu };\n", "import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** A menu item inside a {@linkcode Menu} or {@linkcode Submenu} and contains only text. */\nclass MenuItem extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'MenuItem');\n    }\n    /** Create a new menu item. */\n    static async new(opts) {\n        return newMenu('MenuItem', opts).then(([rid, id]) => new MenuItem(rid, id));\n    }\n    /** Returns the text of this menu item. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this menu item. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n    /** Returns whether this menu item is enabled or not. */\n    async isEnabled() {\n        return invoke('plugin:menu|is_enabled', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets whether this menu item is enabled or not. */\n    async setEnabled(enabled) {\n        return invoke('plugin:menu|set_enabled', {\n            rid: this.rid,\n            kind: this.kind,\n            enabled\n        });\n    }\n    /** Sets the accelerator for this menu item. */\n    async setAccelerator(accelerator) {\n        return invoke('plugin:menu|set_accelerator', {\n            rid: this.rid,\n            kind: this.kind,\n            accelerator\n        });\n    }\n}\n\nexport { MenuItem };\n", "import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * A check menu item inside a {@linkcode Menu} or {@linkcode Submenu}\n * and usually contains a text and a check mark or a similar toggle\n * that corresponds to a checked and unchecked states.\n */\nclass CheckMenuItem extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Check');\n    }\n    /** Create a new check menu item. */\n    static async new(opts) {\n        return newMenu('Check', opts).then(([rid, id]) => new CheckMenuItem(rid, id));\n    }\n    /** Returns the text of this check menu item. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this check menu item. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n    /** Returns whether this check menu item is enabled or not. */\n    async isEnabled() {\n        return invoke('plugin:menu|is_enabled', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets whether this check menu item is enabled or not. */\n    async setEnabled(enabled) {\n        return invoke('plugin:menu|set_enabled', {\n            rid: this.rid,\n            kind: this.kind,\n            enabled\n        });\n    }\n    /** Sets the accelerator for this check menu item. */\n    async setAccelerator(accelerator) {\n        return invoke('plugin:menu|set_accelerator', {\n            rid: this.rid,\n            kind: this.kind,\n            accelerator\n        });\n    }\n    /** Returns whether this check menu item is checked or not. */\n    async isChecked() {\n        return invoke('plugin:menu|is_checked', { rid: this.rid });\n    }\n    /** Sets whether this check menu item is checked or not. */\n    async setChecked(checked) {\n        return invoke('plugin:menu|set_checked', {\n            rid: this.rid,\n            checked\n        });\n    }\n}\n\nexport { CheckMenuItem };\n", "import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\nimport { transformImage } from '../image.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * A native Icon to be used for the menu item\n *\n * #### Platform-specific:\n *\n * - **Windows / Linux**: Unsupported.\n */\nvar NativeIcon;\n(function (NativeIcon) {\n    /** An add item template image. */\n    NativeIcon[\"Add\"] = \"Add\";\n    /** Advanced preferences toolbar icon for the preferences window. */\n    NativeIcon[\"Advanced\"] = \"Advanced\";\n    /** A Bluetooth template image. */\n    NativeIcon[\"Bluetooth\"] = \"Bluetooth\";\n    /** Bookmarks image suitable for a template. */\n    NativeIcon[\"Bookmarks\"] = \"Bookmarks\";\n    /** A caution image. */\n    NativeIcon[\"Caution\"] = \"Caution\";\n    /** A color panel toolbar icon. */\n    NativeIcon[\"ColorPanel\"] = \"ColorPanel\";\n    /** A column view mode template image. */\n    NativeIcon[\"ColumnView\"] = \"ColumnView\";\n    /** A computer icon. */\n    NativeIcon[\"Computer\"] = \"Computer\";\n    /** An enter full-screen mode template image. */\n    NativeIcon[\"EnterFullScreen\"] = \"EnterFullScreen\";\n    /** Permissions for all users. */\n    NativeIcon[\"Everyone\"] = \"Everyone\";\n    /** An exit full-screen mode template image. */\n    NativeIcon[\"ExitFullScreen\"] = \"ExitFullScreen\";\n    /** A cover flow view mode template image. */\n    NativeIcon[\"FlowView\"] = \"FlowView\";\n    /** A folder image. */\n    NativeIcon[\"Folder\"] = \"Folder\";\n    /** A burnable folder icon. */\n    NativeIcon[\"FolderBurnable\"] = \"FolderBurnable\";\n    /** A smart folder icon. */\n    NativeIcon[\"FolderSmart\"] = \"FolderSmart\";\n    /** A link template image. */\n    NativeIcon[\"FollowLinkFreestanding\"] = \"FollowLinkFreestanding\";\n    /** A font panel toolbar icon. */\n    NativeIcon[\"FontPanel\"] = \"FontPanel\";\n    /** A `go back` template image. */\n    NativeIcon[\"GoLeft\"] = \"GoLeft\";\n    /** A `go forward` template image. */\n    NativeIcon[\"GoRight\"] = \"GoRight\";\n    /** Home image suitable for a template. */\n    NativeIcon[\"Home\"] = \"Home\";\n    /** An iChat Theater template image. */\n    NativeIcon[\"IChatTheater\"] = \"IChatTheater\";\n    /** An icon view mode template image. */\n    NativeIcon[\"IconView\"] = \"IconView\";\n    /** An information toolbar icon. */\n    NativeIcon[\"Info\"] = \"Info\";\n    /** A template image used to denote invalid data. */\n    NativeIcon[\"InvalidDataFreestanding\"] = \"InvalidDataFreestanding\";\n    /** A generic left-facing triangle template image. */\n    NativeIcon[\"LeftFacingTriangle\"] = \"LeftFacingTriangle\";\n    /** A list view mode template image. */\n    NativeIcon[\"ListView\"] = \"ListView\";\n    /** A locked padlock template image. */\n    NativeIcon[\"LockLocked\"] = \"LockLocked\";\n    /** An unlocked padlock template image. */\n    NativeIcon[\"LockUnlocked\"] = \"LockUnlocked\";\n    /** A horizontal dash, for use in menus. */\n    NativeIcon[\"MenuMixedState\"] = \"MenuMixedState\";\n    /** A check mark template image, for use in menus. */\n    NativeIcon[\"MenuOnState\"] = \"MenuOnState\";\n    /** A MobileMe icon. */\n    NativeIcon[\"MobileMe\"] = \"MobileMe\";\n    /** A drag image for multiple items. */\n    NativeIcon[\"MultipleDocuments\"] = \"MultipleDocuments\";\n    /** A network icon. */\n    NativeIcon[\"Network\"] = \"Network\";\n    /** A path button template image. */\n    NativeIcon[\"Path\"] = \"Path\";\n    /** General preferences toolbar icon for the preferences window. */\n    NativeIcon[\"PreferencesGeneral\"] = \"PreferencesGeneral\";\n    /** A Quick Look template image. */\n    NativeIcon[\"QuickLook\"] = \"QuickLook\";\n    /** A refresh template image. */\n    NativeIcon[\"RefreshFreestanding\"] = \"RefreshFreestanding\";\n    /** A refresh template image. */\n    NativeIcon[\"Refresh\"] = \"Refresh\";\n    /** A remove item template image. */\n    NativeIcon[\"Remove\"] = \"Remove\";\n    /** A reveal contents template image. */\n    NativeIcon[\"RevealFreestanding\"] = \"RevealFreestanding\";\n    /** A generic right-facing triangle template image. */\n    NativeIcon[\"RightFacingTriangle\"] = \"RightFacingTriangle\";\n    /** A share view template image. */\n    NativeIcon[\"Share\"] = \"Share\";\n    /** A slideshow template image. */\n    NativeIcon[\"Slideshow\"] = \"Slideshow\";\n    /** A badge for a `smart` item. */\n    NativeIcon[\"SmartBadge\"] = \"SmartBadge\";\n    /** Small green indicator, similar to iChat's available image. */\n    NativeIcon[\"StatusAvailable\"] = \"StatusAvailable\";\n    /** Small clear indicator. */\n    NativeIcon[\"StatusNone\"] = \"StatusNone\";\n    /** Small yellow indicator, similar to iChat's idle image. */\n    NativeIcon[\"StatusPartiallyAvailable\"] = \"StatusPartiallyAvailable\";\n    /** Small red indicator, similar to iChat's unavailable image. */\n    NativeIcon[\"StatusUnavailable\"] = \"StatusUnavailable\";\n    /** A stop progress template image. */\n    NativeIcon[\"StopProgressFreestanding\"] = \"StopProgressFreestanding\";\n    /** A stop progress button template image. */\n    NativeIcon[\"StopProgress\"] = \"StopProgress\";\n    /** An image of the empty trash can. */\n    NativeIcon[\"TrashEmpty\"] = \"TrashEmpty\";\n    /** An image of the full trash can. */\n    NativeIcon[\"TrashFull\"] = \"TrashFull\";\n    /** Permissions for a single user. */\n    NativeIcon[\"User\"] = \"User\";\n    /** User account toolbar icon for the preferences window. */\n    NativeIcon[\"UserAccounts\"] = \"UserAccounts\";\n    /** Permissions for a group of users. */\n    NativeIcon[\"UserGroup\"] = \"UserGroup\";\n    /** Permissions for guests. */\n    NativeIcon[\"UserGuest\"] = \"UserGuest\";\n})(NativeIcon || (NativeIcon = {}));\n/**\n * An icon menu item inside a {@linkcode Menu} or {@linkcode Submenu}\n * and usually contains an icon and a text.\n */\nclass IconMenuItem extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Icon');\n    }\n    /** Create a new icon menu item. */\n    static async new(opts) {\n        return newMenu('Icon', opts).then(([rid, id]) => new IconMenuItem(rid, id));\n    }\n    /** Returns the text of this icon menu item. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this icon menu item. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n    /** Returns whether this icon menu item is enabled or not. */\n    async isEnabled() {\n        return invoke('plugin:menu|is_enabled', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets whether this icon menu item is enabled or not. */\n    async setEnabled(enabled) {\n        return invoke('plugin:menu|set_enabled', {\n            rid: this.rid,\n            kind: this.kind,\n            enabled\n        });\n    }\n    /** Sets the accelerator for this icon menu item. */\n    async setAccelerator(accelerator) {\n        return invoke('plugin:menu|set_accelerator', {\n            rid: this.rid,\n            kind: this.kind,\n            accelerator\n        });\n    }\n    /** Sets an icon for this icon menu item */\n    async setIcon(icon) {\n        return invoke('plugin:menu|set_icon', {\n            rid: this.rid,\n            icon: transformImage(icon)\n        });\n    }\n}\n\nexport { IconMenuItem, NativeIcon };\n", "import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** A predefined (native) menu item which has a predefined behavior by the OS or by tauri.  */\nclass PredefinedMenuItem extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Predefined');\n    }\n    /** Create a new predefined menu item. */\n    static async new(opts) {\n        return newMenu('Predefined', opts).then(([rid, id]) => new PredefinedMenuItem(rid, id));\n    }\n    /** Returns the text of this predefined menu item. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this predefined menu item. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n}\n\nexport { PredefinedMenuItem };\n", "import { MenuItem } from './menuItem.js';\nimport { CheckMenuItem } from './checkMenuItem.js';\nimport { IconMenuItem } from './iconMenuItem.js';\nimport { PredefinedMenuItem } from './predefinedMenuItem.js';\nimport { invoke } from '../core.js';\nimport { MenuItemBase, newMenu } from './base.js';\nimport { Position } from '../dpi.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** @ignore */\nfunction itemFromKind([rid, id, kind]) {\n    /* eslint-disable @typescript-eslint/no-unsafe-return */\n    switch (kind) {\n        case 'Submenu':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new Submenu(rid, id);\n        case 'Predefined':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new PredefinedMenuItem(rid, id);\n        case 'Check':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new CheckMenuItem(rid, id);\n        case 'Icon':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new IconMenuItem(rid, id);\n        case 'MenuItem':\n        default:\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new MenuItem(rid, id);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-return */\n}\n/** A type that is a submenu inside a {@linkcode Menu} or {@linkcode Submenu}. */\nclass Submenu extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Submenu');\n    }\n    /** Create a new submenu. */\n    static async new(opts) {\n        return newMenu('Submenu', opts).then(([rid, id]) => new Submenu(rid, id));\n    }\n    /** Returns the text of this submenu. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this submenu. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n    /** Returns whether this submenu is enabled or not. */\n    async isEnabled() {\n        return invoke('plugin:menu|is_enabled', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets whether this submenu is enabled or not. */\n    async setEnabled(enabled) {\n        return invoke('plugin:menu|set_enabled', {\n            rid: this.rid,\n            kind: this.kind,\n            enabled\n        });\n    }\n    /**\n     * Add a menu item to the end of this submenu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async append(items) {\n        return invoke('plugin:menu|append', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i)\n        });\n    }\n    /**\n     * Add a menu item to the beginning of this submenu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async prepend(items) {\n        return invoke('plugin:menu|prepend', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i)\n        });\n    }\n    /**\n     * Add a menu item to the specified position in this submenu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async insert(items, position) {\n        return invoke('plugin:menu|insert', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i),\n            position\n        });\n    }\n    /** Remove a menu item from this submenu. */\n    async remove(item) {\n        return invoke('plugin:menu|remove', {\n            rid: this.rid,\n            kind: this.kind,\n            item: [item.rid, item.kind]\n        });\n    }\n    /** Remove a menu item from this submenu at the specified position. */\n    async removeAt(position) {\n        return invoke('plugin:menu|remove_at', {\n            rid: this.rid,\n            kind: this.kind,\n            position\n        }).then(itemFromKind);\n    }\n    /** Returns a list of menu items that has been added to this submenu. */\n    async items() {\n        return invoke('plugin:menu|items', {\n            rid: this.rid,\n            kind: this.kind\n        }).then((i) => i.map(itemFromKind));\n    }\n    /** Retrieves the menu item matching the given identifier. */\n    async get(id) {\n        return invoke('plugin:menu|get', {\n            rid: this.rid,\n            kind: this.kind,\n            id\n        }).then((r) => (r ? itemFromKind(r) : null));\n    }\n    /**\n     * Popup this submenu as a context menu on the specified window.\n     *\n     * If the position, is provided, it is relative to the window's top-left corner.\n     */\n    async popup(at, window) {\n        var _a;\n        return invoke('plugin:menu|popup', {\n            rid: this.rid,\n            kind: this.kind,\n            window: (_a = window === null || window === void 0 ? void 0 : window.label) !== null && _a !== void 0 ? _a : null,\n            at: at instanceof Position ? at : at ? new Position(at) : null\n        });\n    }\n    /**\n     * Set this submenu as the Window menu for the application on macOS.\n     *\n     * This will cause macOS to automatically add window-switching items and\n     * certain other items to the menu.\n     *\n     * #### Platform-specific:\n     *\n     * - **Windows / Linux**: Unsupported.\n     */\n    async setAsWindowsMenuForNSApp() {\n        return invoke('plugin:menu|set_as_windows_menu_for_nsapp', {\n            rid: this.rid\n        });\n    }\n    /**\n     * Set this submenu as the Help menu for the application on macOS.\n     *\n     * This will cause macOS to automatically add a search box to the menu.\n     *\n     * If no menu is set as the Help menu, macOS will automatically use any menu\n     * which has a title matching the localized word \"Help\".\n     *\n     * #### Platform-specific:\n     *\n     * - **Windows / Linux**: Unsupported.\n     */\n    async setAsHelpMenuForNSApp() {\n        return invoke('plugin:menu|set_as_help_menu_for_nsapp', {\n            rid: this.rid\n        });\n    }\n}\n\nexport { Submenu, itemFromKind };\n", "import { itemFromKind } from './submenu.js';\nimport { Position } from '../dpi.js';\nimport { invoke } from '../core.js';\nimport { MenuItemBase, newMenu } from './base.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** A type that is either a menu bar on the window\n * on Windows and Linux or as a global menu in the menubar on macOS.\n *\n * #### Platform-specific:\n *\n * - **macOS**: if using {@linkcode Menu} for the global menubar, it can only contain {@linkcode Submenu}s.\n */\nclass Menu extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Menu');\n    }\n    /** Create a new menu. */\n    static async new(opts) {\n        return newMenu('Menu', opts).then(([rid, id]) => new Menu(rid, id));\n    }\n    /** Create a default menu. */\n    static async default() {\n        return invoke('plugin:menu|create_default').then(([rid, id]) => new Menu(rid, id));\n    }\n    /**\n     * Add a menu item to the end of this menu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async append(items) {\n        return invoke('plugin:menu|append', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i)\n        });\n    }\n    /**\n     * Add a menu item to the beginning of this menu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async prepend(items) {\n        return invoke('plugin:menu|prepend', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i)\n        });\n    }\n    /**\n     * Add a menu item to the specified position in this menu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async insert(items, position) {\n        return invoke('plugin:menu|insert', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i),\n            position\n        });\n    }\n    /** Remove a menu item from this menu. */\n    async remove(item) {\n        return invoke('plugin:menu|remove', {\n            rid: this.rid,\n            kind: this.kind,\n            item: [item.rid, item.kind]\n        });\n    }\n    /** Remove a menu item from this menu at the specified position. */\n    async removeAt(position) {\n        return invoke('plugin:menu|remove_at', {\n            rid: this.rid,\n            kind: this.kind,\n            position\n        }).then(itemFromKind);\n    }\n    /** Returns a list of menu items that has been added to this menu. */\n    async items() {\n        return invoke('plugin:menu|items', {\n            rid: this.rid,\n            kind: this.kind\n        }).then((i) => i.map(itemFromKind));\n    }\n    /** Retrieves the menu item matching the given identifier. */\n    async get(id) {\n        return invoke('plugin:menu|get', {\n            rid: this.rid,\n            kind: this.kind,\n            id\n        }).then((r) => (r ? itemFromKind(r) : null));\n    }\n    /**\n     * Popup this menu as a context menu on the specified window.\n     *\n     * If the position, is provided, it is relative to the window's top-left corner.\n     */\n    async popup(at, window) {\n        var _a;\n        return invoke('plugin:menu|popup', {\n            rid: this.rid,\n            kind: this.kind,\n            window: (_a = window === null || window === void 0 ? void 0 : window.label) !== null && _a !== void 0 ? _a : null,\n            at: at instanceof Position ? at : at ? new Position(at) : null\n        });\n    }\n    /**\n     * Sets the app-wide menu and returns the previous one.\n     *\n     * If a window was not created with an explicit menu or had one set explicitly,\n     * this menu will be assigned to it.\n     */\n    async setAsAppMenu() {\n        return invoke('plugin:menu|set_as_app_menu', {\n            rid: this.rid\n        }).then((r) => (r ? new Menu(r[0], r[1]) : null));\n    }\n    /**\n     * Sets the window menu and returns the previous one.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Unsupported. The menu on macOS is app-wide and not specific to one\n     * window, if you need to set it, use {@linkcode Menu.setAsAppMenu} instead.\n     */\n    async setAsWindowMenu(window) {\n        var _a;\n        return invoke('plugin:menu|set_as_window_menu', {\n            rid: this.rid,\n            window: (_a = window === null || window === void 0 ? void 0 : window.label) !== null && _a !== void 0 ? _a : null\n        }).then((r) => (r ? new Menu(r[0], r[1]) : null));\n    }\n}\n\nexport { Menu };\n"],
  "mappings": "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",
  "names": ["NativeIcon"]
}
