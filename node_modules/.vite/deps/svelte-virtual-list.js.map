{
  "version": 3,
  "sources": ["../../.pnpm/svelte-virtual-list@3.0.1/node_modules/svelte-virtual-list/VirtualList.svelte"],
  "sourcesContent": ["<script context=\"module\">\n\t// new funtion to force refresh\n\tlet refreshAction;\n\texport function notifyRefresh() {\n\t\t refreshAction();\n\t}\n</script>\n<script>\n\timport { onMount, tick } from 'svelte';\n\n\t// props\n\texport let items;\n\texport let height = '100%';\n\texport let itemHeight = undefined;\n\n\tlet foo;\n\n\t// read-only, but visible to consumers via bind:start\n\texport let start = 0;\n\texport let end = 0;\n\n\t// local state\n\tlet height_map = [];\n\tlet rows;\n\tlet viewport;\n\tlet contents;\n\tlet viewport_height = 0;\n\tlet visible;\n\tlet mounted;\n\n\tlet top = 0;\n\tlet bottom = 0;\n\tlet average_height;\n\n\t$: visible = items.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\t// whenever `items` changes, invalidate the current heightmap\n\t$: if (mounted) refresh(items, viewport_height, itemHeight);\n\n\tasync function refresh(items, viewport_height, itemHeight) {\n\t\tconst { scrollTop } = viewport;\n\n\t\tawait tick(); // wait until the DOM is up to date\n\n\t\tlet content_height = top - scrollTop;\n\t\tlet i = start;\n\n\t\twhile (content_height < viewport_height && i < items.length) {\n\t\t\tlet row = rows[i - start];\n\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\n\t\t\tconst row_height = height_map[i] = itemHeight || row.offsetHeight;\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = (top + content_height) / end;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = items.length;\n\n\t}\n\n\tasync function handle_scroll() {\n\t\tconst { scrollTop } = viewport;\n\n\t\tconst old_start = start;\n\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = itemHeight || rows[v].offsetHeight;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet y = 0;\n\n\t\twhile (i < items.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\tif (y + row_height > scrollTop) {\n\t\t\t\tstart = i;\n\t\t\t\ttop = y;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\twhile (i < items.length) {\n\t\t\ty += height_map[i] || average_height;\n\t\t\ti += 1;\n\n\t\t\tif (y > scrollTop + viewport_height) break;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = y / end;\n\n\t\twhile (i < items.length) height_map[i++] = average_height;\n\t\tbottom = remaining * average_height;\n\n\t\t// prevent jumping if we scrolled up into unknown territory\n\t\tif (start < old_start) {\n\t\t\tawait tick();\n\n\t\t\tlet expected_height = 0;\n\t\t\tlet actual_height = 0;\n\n\t\t\tfor (let i = start; i < old_start; i +=1) {\n\t\t\t\tif (rows[i - start]) {\n\t\t\t\t\texpected_height += height_map[i];\n\t\t\t\t\tactual_height += itemHeight || rows[i - start].offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst d = actual_height - expected_height;\n\t\t\tviewport.scrollTo(0, scrollTop + d);\n\t\t}\n\n\t\t// TODO if we overestimated the space these\n\t\t// rows would occupy we may need to add some\n\t\t// more. maybe we can just call handle_scroll again?\n\t}\n\trefreshAction = () => refresh(items, viewport_height, itemHeight);\n\t// trigger initial refresh\n\tonMount(() => {\n\t\trows = contents.getElementsByTagName('svelte-virtual-list-row');\n\t\tmounted = true;\n\t});\n</script>\n\n<style>\n\tsvelte-virtual-list-viewport {\n\t\tposition: relative;\n\t\toverflow-y: auto;\n\t\t-webkit-overflow-scrolling:touch;\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-contents, svelte-virtual-list-row {\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-row {\n\t\toverflow: hidden;\n\t}\n</style>\n\n<svelte-virtual-list-viewport\n\tbind:this={viewport}\n\tbind:offsetHeight={viewport_height}\n\ton:scroll={handle_scroll}\n\tstyle=\"height: {height};\"\n>\n\t<svelte-virtual-list-contents\n\t\tbind:this={contents}\n\t\tstyle=\"padding-top: {top}px; padding-bottom: {bottom}px;\"\n\t>\n\t\t{#each visible as row (row.index)}\n\t\t\t<svelte-virtual-list-row>\n\t\t\t\t<slot item={row.data}>Missing template</slot>\n\t\t\t</svelte-virtual-list-row>\n\t\t{/each}\n\t</svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>\n"],
  "mappings": "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",
  "names": ["items", "viewport_height", "itemHeight", "i", "$$anchor"]
}
